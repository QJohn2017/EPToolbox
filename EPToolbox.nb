Notebook[{

Cell[CellGroupData[{
Cell["EPToolbox package file", "Section",
 CellChangeTimes->{{3.664036671137698*^9, 3.66403667478555*^9}}],

Cell[TextData[{
 "This notebook auto-generates the ",
 StyleBox["EPToolbox.m", "Code"],
 " package file. For examples and documentation see the ",
 StyleBox["EPToolbox usage.nb", "Code"],
 " notebook.\n\n\[Copyright] Emilio Pisanty, 2014-2016, available under the \
CC-BY-SA 4.0 license."
}], "Text"],

Cell[CellGroupData[{

Cell["Package Start", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<EPToolbox`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Complex root finder", "Subsection"],

Cell[BoxData["FindComplexRoots"], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FindComplexRoots", "::", "usage"}], "=", 
   "\"\<FindComplexRoots[e1==e2, {z, zmin, zmax}] attempts to find complex \
roots of the equation e1==e2 in the complex rectangle with corners zmin and \
zmax.\n\nFindComplexRoots[{e1==e2, e3==e4, \[Ellipsis]}, {z1, z1min, z1max}, \
{z2, z2min, z2max}, \[Ellipsis]] attempts to find complex roots of the given \
system of equations in the multidimensional complex rectangle with corners \
z1min, z1max, z2min, z2max, \[Ellipsis].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Seeds", "::", "usage"}], "=", 
   "\"\<Seeds is an option for FindComplexRoots which determines how many \
initial seeds are used to attempt to find roots of the given equation.\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SeedGenerator", "::", "usage"}], "=", 
    "\"\<SeedGenerator is an option for FindComplexRoots which determines the \
function   used to generate the seeds for the internal FindRoot call. Its \
value can be RandomComplex, RandomNiederreiterComplexes, \
RandomSobolComplexes, DeterministicComplexGrid, or any function f such that \
f[{zmin, zmax}, n] returns n complex numbers in the rectancle with corners \
zmin and zmax.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindComplexRoots", "]"}], " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Options", "[", "FindRoot", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Seeds", " ", "->", " ", "50"}], ",", " ", 
       RowBox[{"SeedGenerator", " ", "->", " ", "RandomComplex"}], ",", " ", 
       RowBox[{"Tolerance", " ", "->", " ", "Automatic"}], ",", " ", 
       RowBox[{"Verbose", " ", "->", " ", "False"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "FindComplexRoots", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<ArgumentsPattern\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"_", ",", " ", 
        RowBox[{"{", 
         RowBox[{"_", ",", " ", "_", ",", " ", "_"}], "}"}], ",", " ", 
        RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], ",", "    ", 
     RowBox[{"\"\<LocalVariables\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Table\>\"", ",", " ", 
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "\[Infinity]"}], "}"}]}], "}"}]}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindComplexRoots", "::", "seeds"}], " ", "=", " ", 
   "\"\<Value of option Seeds -> `1` is not a positive integer.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindComplexRoots", "::", "tol"}], " ", "=", " ", 
    "\"\<Value of option Tolerance -> `1` is not Automatic or a number in [0,\
\[Infinity]).\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "Seeds", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "[", "SeedGenerator", "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindComplexRoots", "[", 
   RowBox[{"equations_List", ",", "domainSpecifiers__", ",", " ", 
    RowBox[{"ops", " ", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"seeds", ",", "tolerances"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{"IntegerQ", "[", 
          RowBox[{"Rationalize", "[", 
           RowBox[{"OptionValue", "[", "Seeds", "]"}], "]"}], "]"}]}], " ", "||",
         " ", 
        RowBox[{
         RowBox[{"OptionValue", "[", "Seeds", "]"}], "\[LessEqual]", "0"}]}], 
       ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"FindComplexRoots", "::", "seeds"}], ",", " ", 
         RowBox[{"OptionValue", "[", "Seeds", "]"}]}], "]"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "Tolerance", "]"}], " ", "===", " ", 
           "Automatic"}], " ", "||", " ", 
          RowBox[{
           RowBox[{"OptionValue", "[", "Tolerance", "]"}], "\[GreaterEqual]", 
           "0"}]}], ")"}]}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"FindComplexRoots", "::", "tol"}], ",", " ", 
         RowBox[{"OptionValue", "[", "Seeds", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"seeds", "=", 
      RowBox[{
       RowBox[{"OptionValue", "[", "SeedGenerator", "]"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "domainSpecifiers", "}"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"OptionValue", "[", "Seeds", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tolerances", "=", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListQ", "[", 
         RowBox[{"OptionValue", "[", "Tolerance", "]"}], "]"}], ",", 
        RowBox[{"OptionValue", "[", "Tolerance", "]"}], ",", 
        "\[IndentingNewLine]", "True", ",", 
        RowBox[{"ConstantArray", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Which", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"NumberQ", "[", 
             RowBox[{"OptionValue", "[", "Tolerance", "]"}], "]"}], ",", 
            RowBox[{"OptionValue", "[", "Tolerance", "]"}], ",", 
            "\[IndentingNewLine]", "True", ",", 
            RowBox[{"10", "^", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"NumberQ", "[", 
                RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], "]"}], 
               ",", " ", 
               RowBox[{"2", "-", 
                RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}]}], ",", 
               
               RowBox[{"2", "-", "$MachinePrecision"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"{", "domainSpecifiers", "}"}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "Verbose", "]"}], ",", 
        RowBox[{"Hold", "[", "]"}], ",", " ", 
        RowBox[{"Hold", "[", 
         RowBox[{"FindRoot", "::", "lstol"}], "]"}]}], "]"}], " ", "/.", " ", 
      
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Hold", "[", "messageSequence___", "]"}], " ", ":>", " ", 
        RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Select", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Check", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
                   RowBox[{"equations", "\[IndentingNewLine]", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "domainSpecifiers", "}"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"{", "domainSpecifiers", "}"}], "]"}]}], "}"}]}], 
                    "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", " ", "@@", " ", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "ops", "}"}], ",", " ", 
                    RowBox[{"Options", "[", "FindRoot", "]"}]}], "]"}]}], 
                    "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"##", "&"}], "[", "]"}]}], "\[IndentingNewLine]", 
                 "]"}], "&"}], "/@", "seeds"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Function", "[", "\[IndentingNewLine]", 
               RowBox[{"repList", ",", "\[IndentingNewLine]", 
                RowBox[{"ReplaceAll", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"And", "@@", 
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"And", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"{", "domainSpecifiers", "}"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}], "]"}],
                     "\[LessEqual]", 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"{", "domainSpecifiers", "}"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], "]"}],
                     "\[LessEqual]", 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"{", "domainSpecifiers", "}"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "3"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Im", "[", 
                    RowBox[{
                    RowBox[{"{", "domainSpecifiers", "}"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}], "]"}],
                     "\[LessEqual]", 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    RowBox[{"{", "domainSpecifiers", "}"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], "]"}],
                     "\[LessEqual]", 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    RowBox[{"{", "domainSpecifiers", "}"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "3"}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"{", "domainSpecifiers", "}"}], "]"}]}], "}"}]}], 
                    "]"}]}], "]"}], "\[IndentingNewLine]", ",", "repList"}], 
                 "]"}]}], "\[IndentingNewLine]", "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"repList1", ",", "repList2"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"And", "@@", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "domainSpecifiers", "}"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], "/.", 
                    "repList1"}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "domainSpecifiers", "}"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], "/.", 
                    "repList2"}], ")"}]}], "]"}], "<", 
                  RowBox[{
                  "tolerances", "\[LeftDoubleBracket]", "j", 
                   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"{", "domainSpecifiers", "}"}], "]"}]}], "}"}]}], 
                "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", " ", 
          RowBox[{"{", "messageSequence", "}"}]}], "]"}]}], "}"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindComplexRoots", "[", 
   RowBox[{
    RowBox[{"e1_", "==", "e2_"}], ",", 
    RowBox[{"{", 
     RowBox[{"z_", ",", "zmin_", ",", "zmax_"}], "}"}], ",", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"FindComplexRoots", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"e1", "==", "e2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "zmin", ",", "zmax"}], "}"}], ",", "ops"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Quasirandom number generators", "Subsection"],

Cell[CellGroupData[{

Cell["RandomSobolComplexes", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomSobolComplexes", "::", "usage"}], "=", 
   "\"\<RandomSobolComplexes[{zmin, zmax}, n] generates a low-discrepancy \
Sobol sequence of n quasirandom complex numbers in the rectangle with corners \
zmin and zmax.\n\nRandomSobolComplexes[{{z1min,z1max},{z2min,z2max},\
\[Ellipsis]},n] generates a low-discrepancy Sobol sequence of n quasirandom \
complex numbers in the multi-dimensional rectangle with corners \
{z1min,z1max},{z2min,z2max},\[Ellipsis].\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomSobolComplexes", "[", 
   RowBox[{"pairsList__", ",", " ", "number_"}], "]"}], " ", ":=", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"randomsList", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pairsList", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
       RowBox[{"Complex", "@@@", 
        RowBox[{"Times", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ReIm", "[", 
           RowBox[{
            RowBox[{"pairsList", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"pairsList", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
          ",", "\[IndentingNewLine]", "randomsList"}], "\[IndentingNewLine]", 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"BlockRandom", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SeedRandom", "[", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<MKL\>\"", ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Sobol\>\"", ",", " ", 
             RowBox[{"\"\<Dimension\>\"", " ", "\[Rule]", " ", 
              RowBox[{"2", 
               RowBox[{"Length", "[", "pairsList", "]"}]}]}]}], "}"}]}]}], 
         "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SeedRandom", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"number", ",", 
          RowBox[{"Length", "[", "pairsList", "]"}], ",", "2"}], "}"}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomSobolComplexes", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"zmin_", "?", "NumericQ"}], ",", 
      RowBox[{"zmax_", "?", "NumericQ"}]}], "}"}], ",", "number_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"RandomSobolComplexes", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"zmin", ",", "zmax"}], "}"}], "}"}], ",", "number"}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["RandomNiederreiterComplexes", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomNiederreiterComplexes", "::", "usage"}], "=", 
   "\"\<RandomNiederreiterComplexes[{zmin, zmax}, n] generates a \
low-discrepancy Niederreiter sequence of n quasirandom complex numbers in the \
rectangle with corners zmin and zmax.\n\n\
RandomNiederreiterComplexes[{{z1min,z1max},{z2min,z2max},\[Ellipsis]},n] \
generates a low-discrepancy Niederreiter sequence of n quasirandom complex \
numbers in the multi-dimensional rectangle with corners \
{z1min,z1max},{z2min,z2max},\[Ellipsis].\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomNiederreiterComplexes", "[", 
   RowBox[{"pairsList__", ",", " ", "number_"}], "]"}], " ", ":=", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"randomsList", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pairsList", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
       RowBox[{"Complex", "@@@", 
        RowBox[{"Times", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ReIm", "[", 
           RowBox[{
            RowBox[{"pairsList", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"pairsList", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
          ",", "\[IndentingNewLine]", "randomsList"}], "\[IndentingNewLine]", 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"BlockRandom", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SeedRandom", "[", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<MKL\>\"", ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Niederreiter\>\"", ",", " ", 
             RowBox[{"\"\<Dimension\>\"", " ", "\[Rule]", " ", 
              RowBox[{"2", 
               RowBox[{"Length", "[", "pairsList", "]"}]}]}]}], "}"}]}]}], 
         "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SeedRandom", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"number", ",", 
          RowBox[{"Length", "[", "pairsList", "]"}], ",", "2"}], "}"}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomNiederreiterComplexes", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"zmin_", "?", "NumericQ"}], ",", 
      RowBox[{"zmax_", "?", "NumericQ"}]}], "}"}], ",", "number_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"RandomNiederreiterComplexes", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"zmin", ",", "zmax"}], "}"}], "}"}], ",", "number"}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["DeterministicComplexGrid", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeterministicComplexGrid", "::", "usage"}], "=", 
   "\"\<DeterministicComplexGrid[{zmin, zmax}, n] generates a grid of about n \
equally spaced complex numbers in the rectangle with corners zmin and zmax.\n\
\nDeterministicComplexGrid[{{z1min,z1max},{z2min,z2max},\[Ellipsis]},n] \
generates a regular grid of about n equally spaced complex numbers in the \
multi-dimensional rectangle with corners {z1min,z1max},{z2min,z2max},\
\[Ellipsis].\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeterministicComplexGrid", "[", 
   RowBox[{"pairsList_", ",", "number_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sep", ",", "separationsList", ",", "gridPointBasis", ",", "k"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sep", "=", 
      RowBox[{"NestWhile", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0.99", "#"}], "&"}], ",", 
        RowBox[{"Min", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"ReIm", "[", 
           RowBox[{
            RowBox[{"pairsList", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"pairsList", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
          "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Times", "@@", 
           FractionBox[
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"ReIm", "[", 
                RowBox[{
                 RowBox[{"pairsList", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
                 RowBox[{"pairsList", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                "]"}], "]"}], ",", 
              RowBox[{"0.99", "#"}]}], "]"}], 
            RowBox[{"0.99", "#"}]]}], "\[LessEqual]", "number"}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"separationsList", "=", 
      RowBox[{"Round", "[", 
       FractionBox[
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"ReIm", "[", 
            RowBox[{
             RowBox[{"pairsList", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
             RowBox[{"pairsList", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
           "]"}], ",", "sep"}], "]"}], "sep"], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gridPointBasis", "=", 
      RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"l", ",", "n"}], "}"}], ",", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{
             "l", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
             "l", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
             FractionBox[
              RowBox[{
               RowBox[{
               "l", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", 
               RowBox[{
               "l", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              
              RowBox[{"n", "+", "1"}]]}], "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"ReIm", "[", "pairsList", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}], ",", "separationsList"}], "}"}]}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"k", "[", 
             RowBox[{
              RowBox[{"2", "j"}], "-", "1"}], "]"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"k", "[", 
              RowBox[{"2", "j"}], "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "pairsList", "]"}]}], "}"}]}], "]"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"k", "[", "j", "]"}], ",", 
               RowBox[{
               "gridPointBasis", "\[LeftDoubleBracket]", "j", 
                "\[RightDoubleBracket]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"2", 
                RowBox[{"Length", "[", "pairsList", "]"}]}]}], "}"}]}], 
            "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"2", 
           RowBox[{"Length", "[", "pairsList", "]"}]}]}], "]"}], "]"}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeterministicComplexGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"zmin_", "?", "NumericQ"}], ",", 
      RowBox[{"zmax_", "?", "NumericQ"}]}], "}"}], ",", "number_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"DeterministicComplexGrid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"zmin", ",", "zmax"}], "}"}], "}"}], ",", "number"}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["RandomComplex", "Subsubsection"],

Cell[TextData[{
 "Updating ",
 StyleBox["RandomComplex", "Code"],
 " to handle input of the form ",
 StyleBox["RandomComplex[{{0, 1+\[ImaginaryI]}, {2, 3+\[ImaginaryI]}}, n]", 
  "Code"],
 "."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "RandomComplex", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomComplex", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"range1_List", ",", "moreRanges___"}], "}"}], ",", "number_"}], 
   "]"}], ":=", 
  RowBox[{"Transpose", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomComplex", "[", 
      RowBox[{"#", ",", "number"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"range1", ",", "moreRanges"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "RandomComplex", "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Contour plot cleaner", "Subsection"],

Cell["\<\
This function cleans up automatically generated contour plots. Generically, a \
contour plot is made of a Polygon with a vast number of vertices in its \
interior, which are not necessary and only slow the plot down - including a \
large use of CPU when the mouse hovers above it, which is definitely \
unwanted. (In addition, these polygons can give rise to white edges inside \
each contour when printed to pdf, which is also undesirable.) This function \
changes such Polygons to FilledCurve constructs which no longer contain the \
unwanted mid-contour points.

This function was written by Szabolcs Horv\[AAcute]t \
(http://mathematica.stackexchange.com/users/12/szabolcs) and was originally \
posted at http://mathematica.stackexchange.com/a/3279 under a CC-BY-SA \
license.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cleanContourPlot", "::", "usage"}], "=", 
   "\"\<cleanContourPlot[plot] Cleans up a contour plot by coalescing complex \
polygons into single FilledCurve instances. See MM.SE/a/3279 for source and \
documentation.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cleanContourPlot", "[", "cp_", "]"}], " ", ":=", "\n", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "points", ",", " ", "groups", ",", " ", "regions", ",", " ", "lines"}], 
     "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{"groups", " ", "=", " ", "\n", "   ", 
      RowBox[{"Cases", "[", 
       RowBox[{"cp", ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"style__", ",", " ", "g_GraphicsGroup"}], "}"}], " ", ":>", 
         " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "style", "}"}], ",", " ", "g"}], "}"}]}], ",", " ", 
        "Infinity"}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"points", " ", "=", " ", "\n", "   ", 
      RowBox[{"First", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"cp", ",", " ", 
         RowBox[{
          RowBox[{"GraphicsComplex", "[", 
           RowBox[{"pts_", ",", " ", "___"}], "]"}], " ", ":>", " ", "pts"}], 
         ",", " ", "Infinity"}], "]"}]}]}], ";", "\n", "  ", 
     RowBox[{"regions", " ", "=", " ", 
      RowBox[{"Table", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "group", ",", " ", "style", ",", " ", "polys", ",", " ", "edges", 
            ",", " ", "cover", ",", " ", "graph"}], "}"}], ",", "\n", "     ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"style", ",", " ", "group"}], "}"}], " ", "=", " ", 
            "g"}], ";", "\n", "     ", 
           RowBox[{"polys", " ", "=", " ", 
            RowBox[{"Join", " ", "@@", " ", 
             RowBox[{"Cases", "[", 
              RowBox[{"group", ",", " ", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"pt_", ",", " ", "___"}], "]"}], " ", ":>", " ", 
                "pt"}], ",", " ", "Infinity"}], "]"}]}]}], ";", "\n", "     ", 
           RowBox[{"edges", " ", "=", " ", 
            RowBox[{"Join", " ", "@@", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{"#", ",", " ", "2", ",", " ", "1", ",", " ", "1"}], 
                 "]"}], " ", "&"}], " ", "/@", " ", "polys"}], ")"}]}]}], ";",
            "\n", "     ", 
           RowBox[{"cover", " ", "=", " ", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"Tally", "[", 
               RowBox[{"Sort", " ", "/@", " ", "edges"}], "]"}], ",", " ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"e_", ",", " ", "1"}], "}"}], " ", ":>", " ", "e"}]}],
              "]"}]}], ";", "\n", "     ", 
           RowBox[{"graph", " ", "=", " ", 
            RowBox[{"Graph", "[", 
             RowBox[{"UndirectedEdge", " ", "@@@", " ", "cover"}], "]"}]}], 
           ";", "\n", "     ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sequence", " ", "@@", " ", "style"}], ",", " ", "\n", 
             "      ", 
             RowBox[{"FilledCurve", "[", "\n", "       ", 
              RowBox[{"List", " ", "/@", " ", 
               RowBox[{"Line", " ", "/@", " ", 
                RowBox[{"First", " ", "/@", " ", "\n", "          ", 
                 RowBox[{"Map", "[", 
                  RowBox[{"First", ",", " ", "\n", "           ", 
                   RowBox[{"FindEulerianCycle", " ", "/@", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Subgraph", "[", 
                    RowBox[{"graph", ",", " ", "#"}], "]"}], " ", "&"}], 
                    ")"}], " ", "/@", " ", "\n", "             ", 
                    RowBox[{"ConnectedComponents", "[", "graph", "]"}]}]}], 
                   ",", " ", 
                   RowBox[{"{", "3", "}"}]}], "]"}]}]}]}], "]"}]}], "}"}]}]}],
          "\n", "     ", "]"}], ",", "\n", "    ", 
        RowBox[{"{", 
         RowBox[{"g", ",", " ", "groups"}], "}"}]}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"lines", " ", "=", " ", 
      RowBox[{"Cases", "[", 
       RowBox[{"cp", ",", " ", "_Tooltip", ",", " ", "Infinity"}], "]"}]}], 
     ";", "\n", "  ", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"GraphicsComplex", "[", 
        RowBox[{"points", ",", " ", 
         RowBox[{"{", 
          RowBox[{"regions", ",", " ", "lines"}], "}"}]}], "]"}], ",", " ", 
       "\n", "   ", 
       RowBox[{"Sequence", " ", "@@", " ", 
        RowBox[{"Options", "[", "cp", "]"}]}]}], "]"}]}]}], "\n", "  ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Dynamics profiler", "Subsection"],

Cell["\<\
This function produces a profiling suite for any dynamics constructs, which \
can be used to see which parts of a Dynamic application take up the most \
processing time and calls.

This function was written by Rui Rojo \
(http://mathematica.stackexchange.com/users/109/rojo)and was originally \
posted at http://mathematica.stackexchange.com/a/8047 under a CC-BY-SA \
license.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"profileDynamics", "::", "usage"}], "=", 
   "\"\<profileDynamics[dynamicsConstruct] Produces a profiling suite for the \
Dynamic statements in its argument. See MM.SE/a/8047 for source and \
documentation.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "profileDynamics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "profileDynamics", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Print\>\"", " ", "->", " ", "False"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"profileDynamics", "[", 
   RowBox[{"d_", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"print", " ", "=", " ", 
      RowBox[{"OptionValue", "[", "\"\<Print\>\"", "]"}]}], "}"}], ",", "\n", 
    "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"counter", " ", "=", " ", 
        RowBox[{"{", "}"}]}], "}"}], ",", "\n", "   ", 
      RowBox[{"DynamicModule", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"diag", ",", " ", "start", ",", " ", "tag"}], "}"}], ",", 
        "\n", "    ", 
        RowBox[{
         RowBox[{
          RowBox[{"diag", "[", "]"}], " ", ":=", " ", 
          RowBox[{"CreateDocument", "[", 
           RowBox[{"Column", "[", 
            RowBox[{"{", "\n", "        ", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Reset counter\>\"", ",", " ", 
                RowBox[{"counter", " ", "=", " ", "start"}]}], "]"}], ",", 
              "\n", "        ", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"Grid", "[", 
                RowBox[{"Join", "[", "\n", "           ", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<Dynamic expression\>\"", ",", " ", "\"\<Count\>\"", 
                    ",", " ", "\"\<Time\>\""}], "}"}], "}"}], ",", " ", "\n", 
                  "           ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"MapAt", "[", 
                    RowBox[{"Short", ",", " ", "#", ",", " ", "1"}], "]"}], 
                    " ", "&"}], " ", "/@", " ", "counter"}]}], "\n", 
                 "           ", "]"}], "]"}]}]}], "\n", "        ", "}"}], 
            "]"}], "]"}]}], ";", "\n", "    ", 
         RowBox[{"CellPrint", "@", "\n", "     ", 
          RowBox[{"ExpressionCell", "[", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<See profiling information\>\"", ",", " ", 
             RowBox[{"diag", "[", "]"}]}], "]"}], "]"}]}], ";", "\n", "    ", 
         
         RowBox[{
          RowBox[{"d", " ", "//.", " ", 
           RowBox[{"{", "\n", "       ", 
            RowBox[{
             RowBox[{
              RowBox[{"i", " ", ":", " ", 
               RowBox[{"Annotation", "[", 
                RowBox[{"_", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"tag", ",", " ", "___"}], "}"}]}], "]"}]}], " ", ":>",
               " ", "i"}], ",", "\n", "       ", 
             RowBox[{
              RowBox[{"e", " ", ":", " ", 
               RowBox[{"Dynamic", "[", 
                RowBox[{
                 RowBox[{"sth", " ", ":", " ", 
                  RowBox[{"Except", "[", 
                   RowBox[{"First", "[", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", " ", "tag"}], "}"}], "]"}], "]"}]}], 
                 ",", " ", "rest___"}], "]"}]}], " ", ":>", " ", 
              RowBox[{"With", "[", "\n", "         ", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"pos", " ", "=", " ", 
                   RowBox[{"1", " ", "+", " ", 
                    RowBox[{"Length", "@", "counter"}]}]}], ",", " ", "\n", 
                  "          ", 
                  RowBox[{"catalog", " ", "=", " ", "\n", "           ", 
                   RowBox[{"Annotation", "[", "\n", "            ", 
                    RowBox[{
                    RowBox[{"InputForm", "@", "e"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"tag", ",", " ", 
                    RowBox[{
                    "Unique", "[", "\"\<profileDynamics`annot\>\"", "]"}]}], 
                    "}"}]}], "]"}]}]}], "}"}], ",", "\n", "         ", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"counter", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"catalog", ",", " ", "0", ",", " ", "0."}], 
                    "}"}]}], "]"}], ";", "\n", "         ", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{
                    RowBox[{"First", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Refresh", "[", "\n", "              ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"print", ",", " ", 
                    RowBox[{"Print", "[", "catalog", "]"}]}], "]"}], ";", " ", 
                    RowBox[{"++", 
                    RowBox[{"counter", "[", 
                    RowBox[{"[", 
                    RowBox[{"pos", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n",
                     "              ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"counter", "[", 
                    RowBox[{"[", 
                    RowBox[{"pos", ",", " ", "3"}], "]"}], "]"}], " ", "+=", 
                    " ", 
                    RowBox[{"First", "@", "#"}]}], ";", " ", 
                    RowBox[{"Last", "@", "#"}]}], ")"}], " ", "&"}], "[", 
                    "\n", "               ", 
                    RowBox[{"AbsoluteTiming", "[", 
                    RowBox[{"Refresh", "[", "sth", "]"}], "]"}], "]"}]}], ",",
                     "\n", "              ", "None"}], "]"}], ",", " ", 
                    "tag"}], "}"}]}], ",", " ", "rest"}], "]"}], " ", "/;", 
                  " ", "True"}]}]}], "\n", "         ", "]"}]}]}], "\n", 
            "       ", "}"}]}], " ", "//", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"start", " ", "=", " ", "counter"}], ";", " ", "#"}], 
            ")"}], " ", "&"}]}]}]}], "\n", "    ", "]"}]}], "\n", "   ", 
     "]"}]}], "\n", "  ", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Package End", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1855, 1056},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Code"], FontWeight -> "Plain", FontSlant -> "Plain", 
    FontTracking -> "Plain", 
    FontVariations -> {
     "Outline" -> False, "Shadow" -> False, "StrikeThrough" -> False, 
      "Underline" -> False}]}, 
  WindowMargins -> {{306, Automatic}, {Automatic, 65}}, Visible -> False, 
  FrontEndVersion -> "10.1 for Linux x86 (64-bit) (March 23, 2015)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]

